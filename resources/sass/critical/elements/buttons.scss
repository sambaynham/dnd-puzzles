@use 'sass:color';
@use 'sass:math';

@use '../base/palette';
@use '../base/typography';
@use '../base/variables';

$buttonRimFactor: 5;

.btn, button {
    &:not(.unstyle, .sf-toolbar-toggle-button) {
        position: relative;
        font-family: typography.$textStack;
        font-weight: bold;
        font-size: 1.25rem;
        color: palette.$white;
        display: inline-block;
        padding: math.div(variables.$base-spacing, 8) math.div(variables.$base-spacing, 4);
        background: palette.$blue linear-gradient(-33deg, color.adjust(palette.$blue, $lightness: -10%), palette.$blue);
        border-radius: 0.125rem;
        border: 0.05rem solid color.adjust(palette.$blue, $lightness: -20%);
        box-shadow: 0 0.05rem 0 color.adjust(palette.$blue, $lightness: -20%);
        text-shadow: 1px 1px 1px color.adjust(palette.$ink, $lightness: -15%);
        transition: all 200ms ease-in-out;

        &:before {
            content: " ";
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            box-shadow: inset 0 0 1rem cyan;
            mix-blend-mode: hard-light;
            opacity: 0;
            pointer-events: none;
            transition: opacity 200ms ease-in-out;
        }

        &:disabled {
            background: palette.$crimson linear-gradient(-33deg, color.adjust(palette.$blue, $lightness: -10%, $saturation: -100%), color.adjust(palette.$blue, $saturation: -100%));
        }

        &:hover, &:focus, &:active {
            &:before {
                opacity: 0.5;
            }
        }

        &.btn-danger {
            background: palette.$crimson linear-gradient(-33deg, color.adjust(palette.$crimson, $lightness: -10%), palette.$crimson);
            &:before {
                box-shadow: inset 0 0 1rem magenta;
            }
        }
    }




    &.cta {
        border: none;
        display: inline-block;
        text-align: center;
        width: auto;
        background: palette.$blue radial-gradient(ellipse at 50% 100%, palette.$blue, color.adjust(palette.$blue, $lightness: -25%));
        padding: math.div(variables.$base-spacing, $buttonRimFactor);
        color: palette.$white;
        position: relative;
        box-shadow: inset 0 0 2.5rem color.adjust(palette.$blue, $lightness: 5%);
        transition: box-shadow 250ms ease-in-out;
        font-family: typography.$displayStack;
        font-size: 1rem;
        font-weight: 300;
        text-shadow: -0.05em -0.05em 0 rgba(0, 0, 0, 0.25), 0.05em 0.05em 0 rgba(0, 0, 0, 0.5);
        margin-bottom : math.div(variables.$base-spacing, 4);

        &:hover, &:active, &:focus {
            box-shadow: inset 0 0 2.5rem color.adjust(palette.$blue, $lightness: 25%);
            color: palette.$offWhite
        }

        &:before, &:after {
            content: " ";
            display: block;
            position: absolute;
        }

        &:after {
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            pointer-events: none;
            background-color: transparent;
            border: math.div(variables.$base-spacing, ($buttonRimFactor + 2)) outset rgba(255, 255, 255, 0.5);
            mix-blend-mode: hard-light;
            opacity: 0.25;
        }
        &:before {
            background: palette.$goldFX;
            top: -0.1rem;
            left: -0.1rem;
            bottom: -0.1rem;
            right: -0.1rem;
            z-index: -1;
            box-shadow: palette.$baseBoxShadow;
            opacity: 1;
        }

        &.btn-primary {
            background: palette.$green radial-gradient(ellipse at 50% 100%, palette.$green, color.adjust(palette.$green, $lightness: -25%));
            box-shadow: inset 0 0 2.5rem color.adjust(palette.$green, $lightness: 5%);

            &:hover, &:active, &:focus {
                box-shadow: inset 0 0 2.5rem color.adjust(palette.$green, $lightness: 25%);
            }
        }

        &.btn-danger {
            background: palette.$crimson radial-gradient(ellipse at 50% 100%, palette.$crimson, color.adjust(palette.$crimson, $lightness: -25%));
            box-shadow: inset 0 0 2.5rem color.adjust(palette.$crimson, $lightness: 5%);

            &:hover, &:active, &:focus {
                box-shadow: inset 0 0 2.5rem color.adjust(palette.$crimson, $lightness: 25%);

            }
        }
    }
}

table {
    .btn, button {
        &:not(.unstyle) {
            margin: 0;
            width: 100%;
            &:before {
                box-shadow: none;

            }

        }
    }

    .btn-group {
        &:before {
            box-shadow: none;
        }
    }
}

.btn-group {
    display: flex;
    position: relative;


    &:before {
        content: " ";
        position: absolute;
        display: block;
        background: palette.$goldFX;
        top: -0.1rem;
        left: -0.1rem;
        bottom: -0.1rem;
        right: -0.1rem;
        z-index: -1;
        box-shadow: palette.$baseBoxShadow;
    }
    .btn, button {
        margin-bottom: 0;
        flex: 1;

        &:before {
            display: none;
        }
    }
}

@media only screen and (min-width: variables.$mobileBreakPointUpper) {
    .btn-group {
        flex-direction: row;
    }

    .btn, button {
        &:not(.unstyle, .sf-toolbar-toggle-button) {
            font-size: 1rem;
        }
    }
}
