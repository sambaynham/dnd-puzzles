@use "sass:color";
@use "../base/palette";
@use "../base/variables";
@use 'sass:math';

@mixin buttonize($primaryColor, $hoverColor, $gemBorderWidth, $textColor, $fontFamily: 'Gladius')
{
    box-shadow: 0 0 1rem transparentize(palette.$ink, 0.5);
    position: relative;
    z-index: 1;
    color: $textColor;
    padding: 0.5rem 1rem;
    text-shadow: 0 -1px 0 color.adjust(palette.$gold, $lightness: -40%);
    background-color: darken($primaryColor, 15);
    transition: background-color 400ms ease-in-out;
    font-family: $fontFamily, sans-serif;
    font-size: 0.9rem;
    font-weight: 800;
    cursor: pointer;
    text-decoration: none;
    text-align: center;
    margin: math.div(variables.$base-spacing, 2);
    border: 0.2rem solid red;
    border-image: palette.$goldFX;
    border-image-slice: 33%;


    &:before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        display: block;
        z-index: -1;
        pointer-events: none;
        background: radial-gradient(at 50% 110%, transparent 50%, color.adjust($primaryColor, $lightness: -10%) 100%);
        mix-blend-mode: color-dodge;

    }
    &:after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        display: block;
        z-index: -1;
        border: $gemBorderWidth outset color.adjust($primaryColor, $lightness: 20%);
        mix-blend-mode: soft-light;
        opacity: 0.5;
        pointer-events: none;
        background-size: contain;
    }

    &:hover {
        background-color: $hoverColor;
        color: $textColor;
    }

    &[disabled] {
        background-color: desaturate($primaryColor, 90);

        &:after {
            border: $gemBorderWidth outset desaturate(color.adjust($primaryColor, $lightness: 20%), 90);
        }
        &:hover {
            background-color: desaturate($hoverColor, 90);
        }
    }

}
